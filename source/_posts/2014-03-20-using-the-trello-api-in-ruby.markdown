---
layout: post
title: "Using the Trello API in Ruby"
date: 2014-03-20 19:37:36 -0400
comments: true
categories: trello ollert ruby
---

So, you want to gather data using the [Trello](//trello.com) API so that you can [do something cool with it][ollert]? And you're using [Ruby](//ruby-lang.org)? Enter [ruby-trello](//github.com/jeremytregunna/ruby-trello). Install!

```bash
$ gem install ruby-trello
```

We'll start off easy, and assume that we're writing a personal application where we only need to access data for one user at a time. We start by configuring ruby-trello. I'm going to assume that you've already generated a public key and received a member token and stored them in your environment.

```ruby global_config_test.rb
require 'trello'

Trello.configure do |config|
  # API key generated by visiting https://trello.com/1/appKey/generate
  config.developer_public_key = ENV['PUBLIC_KEY']

  # Member token
  # larryprice.dev/blog/2014/03/18/connecting-to-the-trello-api/
  config.member_token = ENV['MEMBER_TOKEN']
end
```

This connects me to a specific member as found through `ENV['MEMBER_TOKEN']`. I previously wrote [another post](/blog/2014/03/18/connecting-to-the-trello-api/) about getting a member token from a user.

For demonstration, I'll find myself, grab my first board, and then display the name, names of lists, members who have worked on the project, and some numbers about each of the cards in the board. This is essentially my proof of concept for a [super-cool web-app I wrote](/blog/2014/03/17/sep-startup-weekend-ollert/) called [Ollert][ollert].

```ruby global_config_test.rb
...

# find myself
me = Trello::Member.find("_larryprice")

# find first board
board = me.boards.first
puts board.name
puts "Lists: #{board.lists.map {|x| x.name}.join(', ')}"
puts "Members: #{board.members.map {|x| x.full_name}.join(', ')}"
board.cards.each do |card|
      puts "- \"#{card.name}\""
      puts "-- Actions: #{card.actions.nil? ? 0 : card.actions.count}"
      puts "-- Members: #{card.members.count}"
      puts "-- Labels: #{card.labels.count}"
end
```

Wow, cool! Such data! This is really great for a single user because we only have to make the connection to Trello once (which is not incredibly fast). However, this won't work in a multi-user environment since we configured ruby-trello to use a specific member token. So how do we connect to multiple members at a time? Let's print out the same data we did above for a single user, but using `Trello::Client` to connect to Trello.

```ruby client_test.rb
require 'trello'

me = Trello::Client.new(
  :developer_public_key => ENV['PUBLIC_KEY'],
  :member_token => ENV['MY_MEMBER_TOKEN']
)

you = Trello::Client.new(
  :developer_public_key => ENV['PUBLIC_KEY'],
  :member_token => ENV['YOUR_MEMBER_TOKEN']
)

[me, you].each do |user|
  puts user.fullname
  board = user.boards.first
  puts board.name
  puts "Lists: #{board.lists.map {|x| x.name}.join(', ')}"
  puts "Members: #{board.members.map {|x| x.full_name}.join(', ')}"
  board.cards.each do |card|
        puts "- \"#{card.name}\""
        puts "-- Actions: #{card.actions.nil? ? 0 : card.actions.count}"
        puts "-- Members: #{card.members.count}"
        puts "-- Labels: #{card.labels.count}"
  end
end
```

Now, as your friend and teacher, I command you to use this knowledge to go [do cool stuff][ollert] with Trello!

[ollert]: //ollert.herokuapp.com
